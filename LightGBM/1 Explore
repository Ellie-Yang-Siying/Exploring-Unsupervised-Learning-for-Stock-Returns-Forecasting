{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNq0aqdRDT1w0qnJW7zuvrD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"Bz1xERJ8CTKU"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KZLrcETK8Gxv","executionInfo":{"status":"ok","timestamp":1733540066209,"user_tz":300,"elapsed":42901,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"d7d0eeb4-b46e-4607-bc9e-43556625128f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["data_dir_path = '/content/drive/MyDrive/Edge Final Project/Yahoo Dataset/yahoo_raw_data/df_adj_close.csv'\n","df_orig = pd.read_csv(data_dir_path)\n","df_orig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"OBdbBbFdBhAx","executionInfo":{"status":"ok","timestamp":1733540081691,"user_tz":300,"elapsed":898,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"fed5bac0-fe72-46f0-f428-80c799ec1abd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           Date         3IN         FOUR        ABDN   ALFA  \\\n","0     2010-01-04 00:00:00+00:00   86.931480    78.835579  112.477753    NaN   \n","1     2010-01-05 00:00:00+00:00   87.775238    78.835579  115.026855    NaN   \n","2     2010-01-06 00:00:00+00:00   86.931480    77.258881  114.708214    NaN   \n","3     2010-01-07 00:00:00+00:00   87.269112    79.466263  111.787384    NaN   \n","4     2010-01-08 00:00:00+00:00   87.269112    79.466263  113.592987    NaN   \n","...                         ...         ...          ...         ...    ...   \n","3759  2024-11-19 00:00:00+00:00  330.089264  5070.000000  137.100006  233.0   \n","3760  2024-11-20 00:00:00+00:00  325.675018  4925.000000  136.000000  227.5   \n","3761  2024-11-21 00:00:00+00:00  327.500000  5020.000000  137.449997  221.0   \n","3762  2024-11-22 00:00:00+00:00  329.500000  5040.000000  137.600006  218.0   \n","3763  2024-11-25 00:00:00+00:00  330.000000  5060.000000  141.399994  217.0   \n","\n","              ALW         ATT    ALPH          AO        APAX  ...  \\\n","0      301.734161   27.049999     NaN         NaN         NaN  ...   \n","1      303.362152   27.049999     NaN         NaN         NaN  ...   \n","2      303.090759   27.350000     NaN         NaN         NaN  ...   \n","3      301.914886   27.250000     NaN         NaN         NaN  ...   \n","4      301.462708   27.250000     NaN         NaN         NaN  ...   \n","...           ...         ...     ...         ...         ...  ...   \n","3759  1250.000000  390.000000  2220.0  105.000000  144.000000  ...   \n","3760  1246.000000  387.500000  2220.0  103.199997  142.000000  ...   \n","3761  1266.000000  397.000000  2260.0  105.800003  142.000000  ...   \n","3762  1274.000000  398.000000  2280.0  105.800003  141.399994  ...   \n","3763  1284.000000  404.000000  2220.0  109.599998  143.399994  ...   \n","\n","            WOSG         JDW         SMWH    WIZZ          WG         WKP  \\\n","0            NaN  364.980499   357.406921     NaN  252.187683  139.921661   \n","1            NaN  358.606720   353.290863     NaN  254.018616  142.898727   \n","2            NaN  360.619476   347.820007     NaN  258.317322  139.921661   \n","3            NaN  369.844604   345.786011     NaN  262.934387  138.433136   \n","4            NaN  390.810791   345.084595     NaN  276.944763  136.944580   \n","...          ...         ...          ...     ...         ...         ...   \n","3759  450.000000  614.000000  1267.000000  1329.0   52.849998  542.000000   \n","3760  441.600006  603.500000  1265.000000  1316.0   51.549999  538.000000   \n","3761  447.200012  614.500000  1241.000000  1275.0   54.150002  539.000000   \n","3762  460.600006  616.000000  1253.000000  1297.0   54.000000  545.000000   \n","3763  473.200012  627.500000  1258.000000  1362.0   57.799999  559.000000   \n","\n","             WWH    XPS         ZIG          ASL  \n","0     588.342041    NaN  130.994095   468.427734  \n","1     585.012695    NaN  130.530380   465.825439  \n","2     589.768921    NaN  132.269287   460.620544  \n","3     587.866455    NaN  133.428558   461.054260  \n","4     594.049500    NaN  135.051453   464.957733  \n","...          ...    ...         ...          ...  \n","3759  323.500000  359.0  367.500000  1440.000000  \n","3760  323.000000  358.0  363.500000  1424.000000  \n","3761  327.000000  357.0  365.000000  1434.000000  \n","3762  327.000000  358.0  369.000000  1442.000000  \n","3763  327.500000  372.0  377.500000  1450.000000  \n","\n","[3764 rows x 251 columns]"],"text/html":["\n","  <div id=\"df-5dc76a2c-8409-4f14-b941-69ef85088828\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>3IN</th>\n","      <th>FOUR</th>\n","      <th>ABDN</th>\n","      <th>ALFA</th>\n","      <th>ALW</th>\n","      <th>ATT</th>\n","      <th>ALPH</th>\n","      <th>AO</th>\n","      <th>APAX</th>\n","      <th>...</th>\n","      <th>WOSG</th>\n","      <th>JDW</th>\n","      <th>SMWH</th>\n","      <th>WIZZ</th>\n","      <th>WG</th>\n","      <th>WKP</th>\n","      <th>WWH</th>\n","      <th>XPS</th>\n","      <th>ZIG</th>\n","      <th>ASL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-04 00:00:00+00:00</td>\n","      <td>86.931480</td>\n","      <td>78.835579</td>\n","      <td>112.477753</td>\n","      <td>NaN</td>\n","      <td>301.734161</td>\n","      <td>27.049999</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>364.980499</td>\n","      <td>357.406921</td>\n","      <td>NaN</td>\n","      <td>252.187683</td>\n","      <td>139.921661</td>\n","      <td>588.342041</td>\n","      <td>NaN</td>\n","      <td>130.994095</td>\n","      <td>468.427734</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-05 00:00:00+00:00</td>\n","      <td>87.775238</td>\n","      <td>78.835579</td>\n","      <td>115.026855</td>\n","      <td>NaN</td>\n","      <td>303.362152</td>\n","      <td>27.049999</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>358.606720</td>\n","      <td>353.290863</td>\n","      <td>NaN</td>\n","      <td>254.018616</td>\n","      <td>142.898727</td>\n","      <td>585.012695</td>\n","      <td>NaN</td>\n","      <td>130.530380</td>\n","      <td>465.825439</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-06 00:00:00+00:00</td>\n","      <td>86.931480</td>\n","      <td>77.258881</td>\n","      <td>114.708214</td>\n","      <td>NaN</td>\n","      <td>303.090759</td>\n","      <td>27.350000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>360.619476</td>\n","      <td>347.820007</td>\n","      <td>NaN</td>\n","      <td>258.317322</td>\n","      <td>139.921661</td>\n","      <td>589.768921</td>\n","      <td>NaN</td>\n","      <td>132.269287</td>\n","      <td>460.620544</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-07 00:00:00+00:00</td>\n","      <td>87.269112</td>\n","      <td>79.466263</td>\n","      <td>111.787384</td>\n","      <td>NaN</td>\n","      <td>301.914886</td>\n","      <td>27.250000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>369.844604</td>\n","      <td>345.786011</td>\n","      <td>NaN</td>\n","      <td>262.934387</td>\n","      <td>138.433136</td>\n","      <td>587.866455</td>\n","      <td>NaN</td>\n","      <td>133.428558</td>\n","      <td>461.054260</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-08 00:00:00+00:00</td>\n","      <td>87.269112</td>\n","      <td>79.466263</td>\n","      <td>113.592987</td>\n","      <td>NaN</td>\n","      <td>301.462708</td>\n","      <td>27.250000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>390.810791</td>\n","      <td>345.084595</td>\n","      <td>NaN</td>\n","      <td>276.944763</td>\n","      <td>136.944580</td>\n","      <td>594.049500</td>\n","      <td>NaN</td>\n","      <td>135.051453</td>\n","      <td>464.957733</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3759</th>\n","      <td>2024-11-19 00:00:00+00:00</td>\n","      <td>330.089264</td>\n","      <td>5070.000000</td>\n","      <td>137.100006</td>\n","      <td>233.0</td>\n","      <td>1250.000000</td>\n","      <td>390.000000</td>\n","      <td>2220.0</td>\n","      <td>105.000000</td>\n","      <td>144.000000</td>\n","      <td>...</td>\n","      <td>450.000000</td>\n","      <td>614.000000</td>\n","      <td>1267.000000</td>\n","      <td>1329.0</td>\n","      <td>52.849998</td>\n","      <td>542.000000</td>\n","      <td>323.500000</td>\n","      <td>359.0</td>\n","      <td>367.500000</td>\n","      <td>1440.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3760</th>\n","      <td>2024-11-20 00:00:00+00:00</td>\n","      <td>325.675018</td>\n","      <td>4925.000000</td>\n","      <td>136.000000</td>\n","      <td>227.5</td>\n","      <td>1246.000000</td>\n","      <td>387.500000</td>\n","      <td>2220.0</td>\n","      <td>103.199997</td>\n","      <td>142.000000</td>\n","      <td>...</td>\n","      <td>441.600006</td>\n","      <td>603.500000</td>\n","      <td>1265.000000</td>\n","      <td>1316.0</td>\n","      <td>51.549999</td>\n","      <td>538.000000</td>\n","      <td>323.000000</td>\n","      <td>358.0</td>\n","      <td>363.500000</td>\n","      <td>1424.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3761</th>\n","      <td>2024-11-21 00:00:00+00:00</td>\n","      <td>327.500000</td>\n","      <td>5020.000000</td>\n","      <td>137.449997</td>\n","      <td>221.0</td>\n","      <td>1266.000000</td>\n","      <td>397.000000</td>\n","      <td>2260.0</td>\n","      <td>105.800003</td>\n","      <td>142.000000</td>\n","      <td>...</td>\n","      <td>447.200012</td>\n","      <td>614.500000</td>\n","      <td>1241.000000</td>\n","      <td>1275.0</td>\n","      <td>54.150002</td>\n","      <td>539.000000</td>\n","      <td>327.000000</td>\n","      <td>357.0</td>\n","      <td>365.000000</td>\n","      <td>1434.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3762</th>\n","      <td>2024-11-22 00:00:00+00:00</td>\n","      <td>329.500000</td>\n","      <td>5040.000000</td>\n","      <td>137.600006</td>\n","      <td>218.0</td>\n","      <td>1274.000000</td>\n","      <td>398.000000</td>\n","      <td>2280.0</td>\n","      <td>105.800003</td>\n","      <td>141.399994</td>\n","      <td>...</td>\n","      <td>460.600006</td>\n","      <td>616.000000</td>\n","      <td>1253.000000</td>\n","      <td>1297.0</td>\n","      <td>54.000000</td>\n","      <td>545.000000</td>\n","      <td>327.000000</td>\n","      <td>358.0</td>\n","      <td>369.000000</td>\n","      <td>1442.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3763</th>\n","      <td>2024-11-25 00:00:00+00:00</td>\n","      <td>330.000000</td>\n","      <td>5060.000000</td>\n","      <td>141.399994</td>\n","      <td>217.0</td>\n","      <td>1284.000000</td>\n","      <td>404.000000</td>\n","      <td>2220.0</td>\n","      <td>109.599998</td>\n","      <td>143.399994</td>\n","      <td>...</td>\n","      <td>473.200012</td>\n","      <td>627.500000</td>\n","      <td>1258.000000</td>\n","      <td>1362.0</td>\n","      <td>57.799999</td>\n","      <td>559.000000</td>\n","      <td>327.500000</td>\n","      <td>372.0</td>\n","      <td>377.500000</td>\n","      <td>1450.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3764 rows × 251 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5dc76a2c-8409-4f14-b941-69ef85088828')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5dc76a2c-8409-4f14-b941-69ef85088828 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5dc76a2c-8409-4f14-b941-69ef85088828');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2b54cfea-40a7-4356-a97c-2dd4e37fd91d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b54cfea-40a7-4356-a97c-2dd4e37fd91d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2b54cfea-40a7-4356-a97c-2dd4e37fd91d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_13cb2f71-4bb7-4745-9abf-91edb8d32d11\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_orig')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_13cb2f71-4bb7-4745-9abf-91edb8d32d11 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_orig');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_orig"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df_orig['Date'] = pd.to_datetime(df_orig['Date'])\n","start_date = '2017-01-01'\n","end_date = '2022-12-31'\n","filtered_df_orig = df_orig[(df_orig['Date'] >= start_date) & (df_orig['Date'] <= end_date)]\n","filtered_df_orig"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"zqYe1ucNBhEA","executionInfo":{"status":"ok","timestamp":1733540245419,"user_tz":300,"elapsed":106,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"f9d46a8a-b5bf-4ea5-8e6c-cc43fd29deda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date         3IN         FOUR        ABDN  \\\n","1768 2017-01-03 00:00:00+00:00  193.466919  1506.214478  236.336594   \n","1769 2017-01-04 00:00:00+00:00  193.052505  1558.152954  236.024658   \n","1770 2017-01-05 00:00:00+00:00  193.778107  1511.240845  226.603668   \n","1771 2017-01-06 00:00:00+00:00  193.674942  1528.833008  227.102783   \n","1772 2017-01-09 00:00:00+00:00  193.466919  1548.100342  224.919144   \n","...                        ...         ...          ...         ...   \n","3278 2022-12-22 00:00:00+00:00  317.167389  4023.311523  155.835922   \n","3279 2022-12-23 00:00:00+00:00  319.128265  4143.548828  156.296875   \n","3280 2022-12-28 00:00:00+00:00  323.049957  3967.817871  157.176819   \n","3281 2022-12-29 00:00:00+00:00  325.991211  3977.066895  158.936737   \n","3282 2022-12-30 00:00:00+00:00  327.461823  3953.944824  158.601486   \n","\n","            ALFA         ALW         ATT         ALPH          AO        APAX  \\\n","1768         NaN  633.503723   83.025002          NaN  181.600006  134.559006   \n","1769         NaN  638.468445   83.150002          NaN  178.100006  134.798447   \n","1770         NaN  641.447449   83.000000          NaN  180.399994  135.516708   \n","1771         NaN  644.426208   83.500000          NaN  180.000000  135.516708   \n","1772         NaN  652.866333   84.199997          NaN  181.500000  135.995590   \n","...          ...         ...         ...          ...         ...         ...   \n","3278  150.875656  930.475708  206.500000  1850.570923   52.000000  182.220901   \n","3279  150.875656  931.469849  206.500000  1860.414307   52.400002  177.992142   \n","3280  149.955704  932.463928  205.500000  1791.510132   52.150002  177.031082   \n","3281  152.715607  942.404907  212.500000  1771.823242   52.700001  181.067596   \n","3282  152.715607  942.404907  210.000000  1821.040283   52.000000  181.067596   \n","\n","      ...   WOSG         JDW         SMWH    WIZZ          WG         WKP  \\\n","1768  ...    NaN  840.359009  1349.641479  1799.0  654.553162  571.695435   \n","1769  ...    NaN  836.061646  1346.138062  1840.0  653.811462  580.628235   \n","1770  ...    NaN  846.088684  1386.425781  1861.0  657.519958  588.444458   \n","1771  ...    NaN  850.385925  1387.301758  1854.0  659.745117  594.027405   \n","1772  ...    NaN  850.863403  1397.811401  1843.0  663.453735  577.650635   \n","...   ...    ...         ...          ...     ...         ...         ...   \n","3278  ...  819.0  422.292847  1443.464600  2040.0  135.399994  392.774750   \n","3279  ...  812.5  427.207794  1424.668457  2084.0  135.000000  393.316193   \n","3280  ...  826.5  428.977173  1437.681274  1999.5  134.699997  400.897339   \n","3281  ...  835.5  434.088745  1426.596191  1967.5  138.750000  402.882874   \n","3282  ...  820.5  436.644531  1430.933838  1904.5  135.149994  401.258392   \n","\n","             WWH         XPS         ZIG          ASL  \n","1768  211.866669         NaN  326.510529  1097.930786  \n","1769  214.265167         NaN  333.471741  1093.974487  \n","1770  216.663651         NaN  342.090271  1096.942139  \n","1771  218.762329         NaN  340.432831  1097.930786  \n","1772  223.359421         NaN  348.719879  1094.963379  \n","...          ...         ...         ...          ...  \n","3278  324.449280  128.540436  370.457520  1287.995850  \n","3279  325.949036  128.769989  372.238556  1301.866577  \n","3280  322.949463  127.622292  371.793304  1299.885132  \n","3281  325.449127  130.376740  372.683868  1311.774292  \n","3282  322.449585  127.622292  366.895447  1309.792847  \n","\n","[1515 rows x 251 columns]"],"text/html":["\n","  <div id=\"df-9cd48225-e3fe-46ac-906f-e8eb59d5b8df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>3IN</th>\n","      <th>FOUR</th>\n","      <th>ABDN</th>\n","      <th>ALFA</th>\n","      <th>ALW</th>\n","      <th>ATT</th>\n","      <th>ALPH</th>\n","      <th>AO</th>\n","      <th>APAX</th>\n","      <th>...</th>\n","      <th>WOSG</th>\n","      <th>JDW</th>\n","      <th>SMWH</th>\n","      <th>WIZZ</th>\n","      <th>WG</th>\n","      <th>WKP</th>\n","      <th>WWH</th>\n","      <th>XPS</th>\n","      <th>ZIG</th>\n","      <th>ASL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1768</th>\n","      <td>2017-01-03 00:00:00+00:00</td>\n","      <td>193.466919</td>\n","      <td>1506.214478</td>\n","      <td>236.336594</td>\n","      <td>NaN</td>\n","      <td>633.503723</td>\n","      <td>83.025002</td>\n","      <td>NaN</td>\n","      <td>181.600006</td>\n","      <td>134.559006</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>840.359009</td>\n","      <td>1349.641479</td>\n","      <td>1799.0</td>\n","      <td>654.553162</td>\n","      <td>571.695435</td>\n","      <td>211.866669</td>\n","      <td>NaN</td>\n","      <td>326.510529</td>\n","      <td>1097.930786</td>\n","    </tr>\n","    <tr>\n","      <th>1769</th>\n","      <td>2017-01-04 00:00:00+00:00</td>\n","      <td>193.052505</td>\n","      <td>1558.152954</td>\n","      <td>236.024658</td>\n","      <td>NaN</td>\n","      <td>638.468445</td>\n","      <td>83.150002</td>\n","      <td>NaN</td>\n","      <td>178.100006</td>\n","      <td>134.798447</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>836.061646</td>\n","      <td>1346.138062</td>\n","      <td>1840.0</td>\n","      <td>653.811462</td>\n","      <td>580.628235</td>\n","      <td>214.265167</td>\n","      <td>NaN</td>\n","      <td>333.471741</td>\n","      <td>1093.974487</td>\n","    </tr>\n","    <tr>\n","      <th>1770</th>\n","      <td>2017-01-05 00:00:00+00:00</td>\n","      <td>193.778107</td>\n","      <td>1511.240845</td>\n","      <td>226.603668</td>\n","      <td>NaN</td>\n","      <td>641.447449</td>\n","      <td>83.000000</td>\n","      <td>NaN</td>\n","      <td>180.399994</td>\n","      <td>135.516708</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>846.088684</td>\n","      <td>1386.425781</td>\n","      <td>1861.0</td>\n","      <td>657.519958</td>\n","      <td>588.444458</td>\n","      <td>216.663651</td>\n","      <td>NaN</td>\n","      <td>342.090271</td>\n","      <td>1096.942139</td>\n","    </tr>\n","    <tr>\n","      <th>1771</th>\n","      <td>2017-01-06 00:00:00+00:00</td>\n","      <td>193.674942</td>\n","      <td>1528.833008</td>\n","      <td>227.102783</td>\n","      <td>NaN</td>\n","      <td>644.426208</td>\n","      <td>83.500000</td>\n","      <td>NaN</td>\n","      <td>180.000000</td>\n","      <td>135.516708</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>850.385925</td>\n","      <td>1387.301758</td>\n","      <td>1854.0</td>\n","      <td>659.745117</td>\n","      <td>594.027405</td>\n","      <td>218.762329</td>\n","      <td>NaN</td>\n","      <td>340.432831</td>\n","      <td>1097.930786</td>\n","    </tr>\n","    <tr>\n","      <th>1772</th>\n","      <td>2017-01-09 00:00:00+00:00</td>\n","      <td>193.466919</td>\n","      <td>1548.100342</td>\n","      <td>224.919144</td>\n","      <td>NaN</td>\n","      <td>652.866333</td>\n","      <td>84.199997</td>\n","      <td>NaN</td>\n","      <td>181.500000</td>\n","      <td>135.995590</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>850.863403</td>\n","      <td>1397.811401</td>\n","      <td>1843.0</td>\n","      <td>663.453735</td>\n","      <td>577.650635</td>\n","      <td>223.359421</td>\n","      <td>NaN</td>\n","      <td>348.719879</td>\n","      <td>1094.963379</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3278</th>\n","      <td>2022-12-22 00:00:00+00:00</td>\n","      <td>317.167389</td>\n","      <td>4023.311523</td>\n","      <td>155.835922</td>\n","      <td>150.875656</td>\n","      <td>930.475708</td>\n","      <td>206.500000</td>\n","      <td>1850.570923</td>\n","      <td>52.000000</td>\n","      <td>182.220901</td>\n","      <td>...</td>\n","      <td>819.0</td>\n","      <td>422.292847</td>\n","      <td>1443.464600</td>\n","      <td>2040.0</td>\n","      <td>135.399994</td>\n","      <td>392.774750</td>\n","      <td>324.449280</td>\n","      <td>128.540436</td>\n","      <td>370.457520</td>\n","      <td>1287.995850</td>\n","    </tr>\n","    <tr>\n","      <th>3279</th>\n","      <td>2022-12-23 00:00:00+00:00</td>\n","      <td>319.128265</td>\n","      <td>4143.548828</td>\n","      <td>156.296875</td>\n","      <td>150.875656</td>\n","      <td>931.469849</td>\n","      <td>206.500000</td>\n","      <td>1860.414307</td>\n","      <td>52.400002</td>\n","      <td>177.992142</td>\n","      <td>...</td>\n","      <td>812.5</td>\n","      <td>427.207794</td>\n","      <td>1424.668457</td>\n","      <td>2084.0</td>\n","      <td>135.000000</td>\n","      <td>393.316193</td>\n","      <td>325.949036</td>\n","      <td>128.769989</td>\n","      <td>372.238556</td>\n","      <td>1301.866577</td>\n","    </tr>\n","    <tr>\n","      <th>3280</th>\n","      <td>2022-12-28 00:00:00+00:00</td>\n","      <td>323.049957</td>\n","      <td>3967.817871</td>\n","      <td>157.176819</td>\n","      <td>149.955704</td>\n","      <td>932.463928</td>\n","      <td>205.500000</td>\n","      <td>1791.510132</td>\n","      <td>52.150002</td>\n","      <td>177.031082</td>\n","      <td>...</td>\n","      <td>826.5</td>\n","      <td>428.977173</td>\n","      <td>1437.681274</td>\n","      <td>1999.5</td>\n","      <td>134.699997</td>\n","      <td>400.897339</td>\n","      <td>322.949463</td>\n","      <td>127.622292</td>\n","      <td>371.793304</td>\n","      <td>1299.885132</td>\n","    </tr>\n","    <tr>\n","      <th>3281</th>\n","      <td>2022-12-29 00:00:00+00:00</td>\n","      <td>325.991211</td>\n","      <td>3977.066895</td>\n","      <td>158.936737</td>\n","      <td>152.715607</td>\n","      <td>942.404907</td>\n","      <td>212.500000</td>\n","      <td>1771.823242</td>\n","      <td>52.700001</td>\n","      <td>181.067596</td>\n","      <td>...</td>\n","      <td>835.5</td>\n","      <td>434.088745</td>\n","      <td>1426.596191</td>\n","      <td>1967.5</td>\n","      <td>138.750000</td>\n","      <td>402.882874</td>\n","      <td>325.449127</td>\n","      <td>130.376740</td>\n","      <td>372.683868</td>\n","      <td>1311.774292</td>\n","    </tr>\n","    <tr>\n","      <th>3282</th>\n","      <td>2022-12-30 00:00:00+00:00</td>\n","      <td>327.461823</td>\n","      <td>3953.944824</td>\n","      <td>158.601486</td>\n","      <td>152.715607</td>\n","      <td>942.404907</td>\n","      <td>210.000000</td>\n","      <td>1821.040283</td>\n","      <td>52.000000</td>\n","      <td>181.067596</td>\n","      <td>...</td>\n","      <td>820.5</td>\n","      <td>436.644531</td>\n","      <td>1430.933838</td>\n","      <td>1904.5</td>\n","      <td>135.149994</td>\n","      <td>401.258392</td>\n","      <td>322.449585</td>\n","      <td>127.622292</td>\n","      <td>366.895447</td>\n","      <td>1309.792847</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1515 rows × 251 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cd48225-e3fe-46ac-906f-e8eb59d5b8df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9cd48225-e3fe-46ac-906f-e8eb59d5b8df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9cd48225-e3fe-46ac-906f-e8eb59d5b8df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-815e3719-a9df-449c-800b-f2c572f8eb64\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-815e3719-a9df-449c-800b-f2c572f8eb64')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-815e3719-a9df-449c-800b-f2c572f8eb64 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_60fd69a9-064c-4c42-a2ab-591ba9f56831\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtered_df_orig')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_60fd69a9-064c-4c42-a2ab-591ba9f56831 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('filtered_df_orig');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_df_orig"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["no_missing_value_companies = filtered_df_orig.columns[filtered_df_orig.isnull().sum() == 0]\n","no_missing_value_companies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vS7LNAkiBhGb","executionInfo":{"status":"ok","timestamp":1733540320272,"user_tz":300,"elapsed":68,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"1e641164-3f5d-4a08-d625-77ee5414ba70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', '3IN', 'FOUR', 'ABDN', 'ALW', 'ATT', 'APAX', 'ASHM', 'DGN',\n","       'AGR',\n","       ...\n","       'VOF', 'FAN', 'JDW', 'SMWH', 'WIZZ', 'WG', 'WKP', 'WWH', 'ZIG', 'ASL'],\n","      dtype='object', length=201)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["cluster_data_dir_path = '/content/drive/MyDrive/Edge Final Project/Clustering results/'\n","cluster_data = pd.read_csv(cluster_data_dir_path + 'stock_8_cluster_df.csv')\n","cluster_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"TXFzYxA1BhL0","executionInfo":{"status":"ok","timestamp":1733540464901,"user_tz":300,"elapsed":395,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"e6dc175f-6fe6-447f-eb26-2becadef33db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Ticker  Cluster\n","0      3IN        2\n","1     FOUR        6\n","2     ABDN        5\n","3      ALW        5\n","4      ATT        5\n","..     ...      ...\n","164     WG        6\n","165    WKP        5\n","166    WWH        7\n","167    ZIG        5\n","168    ASL        1\n","\n","[169 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-dee3fba1-1e7b-47de-a4d8-259689e7e64f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ticker</th>\n","      <th>Cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3IN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>FOUR</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ABDN</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ALW</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ATT</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>WG</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>165</th>\n","      <td>WKP</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>166</th>\n","      <td>WWH</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>167</th>\n","      <td>ZIG</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>168</th>\n","      <td>ASL</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>169 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dee3fba1-1e7b-47de-a4d8-259689e7e64f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dee3fba1-1e7b-47de-a4d8-259689e7e64f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dee3fba1-1e7b-47de-a4d8-259689e7e64f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7147dc59-fedc-4210-b2c0-d855f0cafe3b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7147dc59-fedc-4210-b2c0-d855f0cafe3b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7147dc59-fedc-4210-b2c0-d855f0cafe3b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3e05aed7-a604-488d-99e3-6b2226080cf2\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3e05aed7-a604-488d-99e3-6b2226080cf2 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cluster_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cluster_data","summary":"{\n  \"name\": \"cluster_data\",\n  \"rows\": 169,\n  \"fields\": [\n    {\n      \"column\": \"Ticker\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 169,\n        \"samples\": [\n          \"RICA\",\n          \"CGT\",\n          \"PAGE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6,\n          7,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["no_missing_value_set = set(no_missing_value_companies)\n","cluster_data_set = set(cluster_data['Ticker'])\n","common_companies = no_missing_value_set.intersection(cluster_data_set)\n","non_overlapping_companies = no_missing_value_set.difference(cluster_data_set)\n","print(\"overlap:\", list(common_companies))\n","print(\"not overlap:\", list(non_overlapping_companies))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j8M6m7U4BhOE","executionInfo":{"status":"ok","timestamp":1733541160378,"user_tz":300,"elapsed":89,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"11d4f4ad-77ef-4ea3-cffc-5bd2cac2da7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["overlap: ['NBPE', 'JII', 'DSCV', 'TEM', 'HILS', 'GNC', 'CHG', 'MYI', 'MAB', 'CBG', 'EDIN', 'INPP', 'RCP', 'IGG', 'BRSC', 'PTEC', 'ESCT', 'RICA', 'ITV', 'ASL', 'DRX', 'PIN', 'PNL', 'PAGE', 'SRP', 'IWG', 'PNN', 'PAG', 'TEP', 'JMG', 'INCH', 'CCC', 'EWI', 'MEGP', 'RSW', 'LRE', 'CWR', 'ELM', 'SAIN', 'INVP', 'GRI', 'PCT', 'CKN', 'LWDB', 'BYG', 'SNR', 'KIE', 'MGNS', 'WG', 'ALW', 'ABDN', 'BBY', 'HICL', 'NAS', 'HGT', 'PPET', 'JGGI', 'BNKR', 'TPK', 'BRBY', 'GNS', 'HFG', 'HOC', 'AGT', 'STJ', 'FSV', 'RWI', 'FGP', 'ASHM', 'CURY', 'GRG', 'ATT', 'PZC', 'JAM', 'PHP', 'STEM', 'BGEO', 'DLN', 'FEV', 'THRG', 'AGR', 'RAT', 'TRY', 'ESNT', 'HMSO', 'HTG', 'SOI', 'IEM', 'MONY', 'MGAM', 'SHC', 'SMWH', 'MRCH', 'HVPE', 'HET', 'SAFE', 'BRGE', 'PFD', 'VCT', 'VOF', 'FCSS', 'IPO', 'WKP', 'MTO', 'COA', 'GPE', 'PPH', 'BVIC', 'FUTR', 'GSCT', 'BGFD', 'DGN', 'BAG', 'MNKS', '3IN', 'CLDN', 'BHMG', 'BUT', 'DNLM', 'KLR', 'NCC', 'JFJ', 'GDWN', 'DOM', 'HRI', 'PAY', 'GFTU', 'MSLH', 'MRC', 'MUT', 'EOT', 'HSL', 'QQ', 'CCR', 'JDW', 'SXS', 'SDP', 'WWH', 'CCL', 'JEDT', 'FOUR', 'ROR', 'BMY', 'HWG', 'FGT', 'EMG', 'CTY', 'PHI', 'ICGT', 'OXIG', 'SRE', 'BRWM', 'FEML', 'TCAP', 'TMPL', 'BREE', 'HAS', 'BOY', 'TATE', 'ZIG', 'SVS', 'VSVS']\n","not overlap: ['UKW', 'BSIF', 'SEQI', 'PLUS', 'TFIF', 'GEN', 'SYNC', 'IDS', 'NESF', 'ESP', 'WIZZ', 'MTRO', 'SCT', 'GCP', 'BBOX', 'PETS', 'VEIL', 'BBGI', 'SHED', 'FSFL', 'PRTC', 'TBCG', 'Date', 'APAX', 'IBST', 'PCFT', 'KNOS', 'JUST', 'SPI', 'SSPG', 'JLEN', 'FAN', 'CMCX', 'JUP', 'BOWL', 'GROW', 'THRL', 'BBH', 'TRIG']\n"]}]},{"cell_type":"code","source":["all_in_no_missing = cluster_data_set.issubset(no_missing_value_set)\n","\n","not_in_no_missing = cluster_data_set.difference(no_missing_value_set)\n","\n","if all_in_no_missing:\n","    print(\"The companies in the cluster data have no missing value.\")\n","else:\n","    print(\"These companies in the clustering result have missing value from 2017/1/1 to 2022/12/31:\", list(not_in_no_missing))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WVaKgNAiEeix","executionInfo":{"status":"ok","timestamp":1733541163290,"user_tz":300,"elapsed":97,"user":{"displayName":"Ellie Yang","userId":"17207931905370241108"}},"outputId":"2607e82d-2608-4b0a-ad29-461c9b488eee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["These companies in the clustering result have missing value from 2017/1/1 to 2022/12/31: ['CGT', 'BAB', 'GAW', 'JMAT', 'SPT', 'BWY', 'CWK']\n"]}]}]}